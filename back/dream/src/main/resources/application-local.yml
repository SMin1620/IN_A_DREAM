server:
  port: 8080


spring:

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  datasource:
    url: jdbc:h2:tcp://localhost/~/test
    username: sa
    password:
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console

#  security:
#    user:
#      password: 1234

  data:
    redis:
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
      port: 6379
      host: 127.0.0.1
      password: 1234

  servlet:
    multipart:
      enabled: true
      location: ./media/img/

  mvc:
    static-path-pattern: /static/**

  kafka:
    bootstrap-servers: localhost:9094

    consumer:
      # consumer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 192.168.0.4:9092


      # 식별 가능한 Consumer Group Id
      group-id: loggroup
      # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
      # latest: 가장 최근에 생산된 메시지로 offeset reset
      # earliest: 가장 오래된 메시지로 offeset reset
      # none: offset 정보가 없으면 Exception 발생
      auto-offset-reset: earliest
      # 데이터를 받아올 때, key/value를 역직렬화
      # JSON 데이터를 받아올 것이라면 JsonDeserializer
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#    producer:
      # producer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 3.34.97.97:9092

      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  paths-to-match: /**
  swagger-ui:
    path: /
    display-request-duration: true
    groups-order: desc
    operations-sorter: alpha
    disable-swagger-default-url: true
  api-docs:
    groups:
      enabled: true

logging:
  level:
    org.hibernate.sql: debug
    org.hibernate.type: trace
    org.apache.kafka.clients.consumer.internals.AbstractCoordinator: debug

jwt:
  header: Authorization
  #HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
  secret: ${secret}

  token:
    token-validity-in-seconds: 86400 # ttl (초)
    access-token-expiration-sec: 1800
    refresh-token-expiration-sec: 1209600


